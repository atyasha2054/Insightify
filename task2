#Task 2

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans

# Selecting relevant features for segmentation
features = ["Age", "Income", "MntWines", "MntFruits", "MntMeatProducts", "MntFishProducts", "MntSweetProducts", "MntGoldProds", "NumWebPurchases", "NumCatalogPurchases", "NumStorePurchases", "NumWebVisitsMonth"]

# Standardize the data
scaler = StandardScaler()
df_scaled = scaler.fit_transform(df[features])

# Perform K-Means Clustering
kmeans = KMeans(n_clusters=4, random_state=42, n_init=10)
df["Cluster"] = kmeans.fit_predict(df_scaled)

# Visualizing clusters based on Income and Spending
plt.figure(figsize=(8, 5))
sns.scatterplot(x=df["Income"], y=df["MntWines"], hue=df["Cluster"], palette="viridis")
plt.title("Customer Segments based on Income and Wine Spending")
plt.xlabel("Income")
plt.ylabel("Wine Spending")
plt.legend(title="Cluster")
plt.show()

# Analyzing Campaign Response per Cluster
cluster_response = df.groupby("Cluster")["Response"].mean() * 100

plt.figure(figsize=(8, 5))
cluster_response.plot(kind="bar", color="royalblue")
plt.title("Campaign Response Rate per Customer Segment")
plt.ylabel("Response Rate (%)")
plt.xlabel("Cluster")
plt.xticks(rotation=0)
plt.show()

# Print average characteristics per cluster
cluster_summary = df.groupby("Cluster")[features].mean()
print("\nCluster Characteristics:")
print(cluster_summary)
